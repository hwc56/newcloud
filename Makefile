#############################################################################
# Makefile for building: newcloud
# Generated by qmake (2.01a) (Qt 4.6.3) on: Mon Jan 4 16:49:45 2016
# Project:  newcloud.pro
# Template: app
# Command: /opt/qtsdk-2010.04/qt/bin/qmake -unix -o Makefile newcloud.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I../qtsdk-2010.04/qt/mkspecs/linux-g++ -I. -I../qtsdk-2010.04/qt/include/QtCore -I../qtsdk-2010.04/qt/include/QtGui -I../qtsdk-2010.04/qt/include/QtWebKit  -I../qtsdk-2010.04/qt/include/QtNetwork -I../qtsdk-2010.04/qt/include -I. -I. -I. -I/usr/local/include
LINK          = g++
LFLAGS        = -Wl,-O1 -Wl,-rpath,/opt/qtsdk-2010.04/qt/lib
LIBS          = $(SUBLIBS)  -L/opt/qtsdk-2010.04/qt/lib -lQtGui -L/opt/qtsdk-2010.04/qt/lib -L/usr/X11R6/lib -lQtCore -lpthread -lQtNetwork -lQtWebKit -lcurl -lusb
AR            = ar cqs
RANLIB        = 
QMAKE         = /opt/qtsdk-2010.04/qt/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = changepassword.cpp \
		cJSON.c \
		createvm.cpp \
		http_curl.cpp \
		logging.c \
		login.cpp \
		main.cpp \
		mainview.cpp \
		networkconfig.cpp \
		socketservice.cpp \
		wifi.cpp moc_changepassword.cpp \
		moc_createvm.cpp \
		moc_login.cpp \
		moc_mainview.cpp \
		moc_networkconfig.cpp \
		moc_socketservice.cpp \
		moc_wifi.cpp
OBJECTS       = changepassword.o \
		cJSON.o \
		createvm.o \
		http_curl.o \
		logging.o \
		login.o \
		main.o \
		mainview.o \
		networkconfig.o \
		socketservice.o \
		wifi.o \
		moc_changepassword.o \
		moc_createvm.o \
		moc_login.o \
		moc_mainview.o \
		moc_networkconfig.o \
		moc_socketservice.o \
		moc_wifi.o
DIST          = ../qtsdk-2010.04/qt/mkspecs/common/g++.conf \
		../qtsdk-2010.04/qt/mkspecs/common/unix.conf \
		../qtsdk-2010.04/qt/mkspecs/common/linux.conf \
		../qtsdk-2010.04/qt/mkspecs/qconfig.pri \
		../qtsdk-2010.04/qt/mkspecs/features/qt_functions.prf \
		../qtsdk-2010.04/qt/mkspecs/features/qt_config.prf \
		../qtsdk-2010.04/qt/mkspecs/features/exclusive_builds.prf \
		../qtsdk-2010.04/qt/mkspecs/features/default_pre.prf \
		../qtsdk-2010.04/qt/mkspecs/features/release.prf \
		../qtsdk-2010.04/qt/mkspecs/features/default_post.prf \
		../qtsdk-2010.04/qt/mkspecs/features/warn_on.prf \
		../qtsdk-2010.04/qt/mkspecs/features/qt.prf \
		../qtsdk-2010.04/qt/mkspecs/features/unix/thread.prf \
		../qtsdk-2010.04/qt/mkspecs/features/moc.prf \
		../qtsdk-2010.04/qt/mkspecs/features/resources.prf \
		../qtsdk-2010.04/qt/mkspecs/features/uic.prf \
		../qtsdk-2010.04/qt/mkspecs/features/yacc.prf \
		../qtsdk-2010.04/qt/mkspecs/features/lex.prf \
		../qtsdk-2010.04/qt/mkspecs/features/include_source_dir.prf \
		newcloud.pro
QMAKE_TARGET  = newcloud
DESTDIR       = 
TARGET        = newcloud

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: newcloud.pro  ../qtsdk-2010.04/qt/mkspecs/linux-g++/qmake.conf ../qtsdk-2010.04/qt/mkspecs/common/g++.conf \
		../qtsdk-2010.04/qt/mkspecs/common/unix.conf \
		../qtsdk-2010.04/qt/mkspecs/common/linux.conf \
		../qtsdk-2010.04/qt/mkspecs/qconfig.pri \
		../qtsdk-2010.04/qt/mkspecs/features/qt_functions.prf \
		../qtsdk-2010.04/qt/mkspecs/features/qt_config.prf \
		../qtsdk-2010.04/qt/mkspecs/features/exclusive_builds.prf \
		../qtsdk-2010.04/qt/mkspecs/features/default_pre.prf \
		../qtsdk-2010.04/qt/mkspecs/features/release.prf \
		../qtsdk-2010.04/qt/mkspecs/features/default_post.prf \
		../qtsdk-2010.04/qt/mkspecs/features/warn_on.prf \
		../qtsdk-2010.04/qt/mkspecs/features/qt.prf \
		../qtsdk-2010.04/qt/mkspecs/features/unix/thread.prf \
		../qtsdk-2010.04/qt/mkspecs/features/moc.prf \
		../qtsdk-2010.04/qt/mkspecs/features/resources.prf \
		../qtsdk-2010.04/qt/mkspecs/features/uic.prf \
		../qtsdk-2010.04/qt/mkspecs/features/yacc.prf \
		../qtsdk-2010.04/qt/mkspecs/features/lex.prf \
		../qtsdk-2010.04/qt/mkspecs/features/include_source_dir.prf \
		/opt/qtsdk-2010.04/qt/lib/libQtGui.prl \
		/opt/qtsdk-2010.04/qt/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile newcloud.pro
../qtsdk-2010.04/qt/mkspecs/common/g++.conf:
../qtsdk-2010.04/qt/mkspecs/common/unix.conf:
../qtsdk-2010.04/qt/mkspecs/common/linux.conf:
../qtsdk-2010.04/qt/mkspecs/qconfig.pri:
../qtsdk-2010.04/qt/mkspecs/features/qt_functions.prf:
../qtsdk-2010.04/qt/mkspecs/features/qt_config.prf:
../qtsdk-2010.04/qt/mkspecs/features/exclusive_builds.prf:
../qtsdk-2010.04/qt/mkspecs/features/default_pre.prf:
../qtsdk-2010.04/qt/mkspecs/features/release.prf:
../qtsdk-2010.04/qt/mkspecs/features/default_post.prf:
../qtsdk-2010.04/qt/mkspecs/features/warn_on.prf:
../qtsdk-2010.04/qt/mkspecs/features/qt.prf:
../qtsdk-2010.04/qt/mkspecs/features/unix/thread.prf:
../qtsdk-2010.04/qt/mkspecs/features/moc.prf:
../qtsdk-2010.04/qt/mkspecs/features/resources.prf:
../qtsdk-2010.04/qt/mkspecs/features/uic.prf:
../qtsdk-2010.04/qt/mkspecs/features/yacc.prf:
../qtsdk-2010.04/qt/mkspecs/features/lex.prf:
../qtsdk-2010.04/qt/mkspecs/features/include_source_dir.prf:
/opt/qtsdk-2010.04/qt/lib/libQtGui.prl:
/opt/qtsdk-2010.04/qt/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile newcloud.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/newcloud1.0.0 || $(MKDIR) .tmp/newcloud1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/newcloud1.0.0/ && $(COPY_FILE) --parents changepassword.h cJSON.h createvm.h http_curl.h logging.h login.h mainview.h networkconfig.h socketservice.h ui_login.h ui_mainview.h ui_networkconfig.h ui_wifi.h wifi.h .tmp/newcloud1.0.0/ && $(COPY_FILE) --parents changepassword.cpp cJSON.c createvm.cpp http_curl.cpp logging.c login.cpp main.cpp mainview.cpp networkconfig.cpp socketservice.cpp wifi.cpp .tmp/newcloud1.0.0/ && (cd `dirname .tmp/newcloud1.0.0` && $(TAR) newcloud1.0.0.tar newcloud1.0.0 && $(COMPRESS) newcloud1.0.0.tar) && $(MOVE) `dirname .tmp/newcloud1.0.0`/newcloud1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/newcloud1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_changepassword.cpp moc_createvm.cpp moc_login.cpp moc_mainview.cpp moc_networkconfig.cpp moc_socketservice.cpp moc_wifi.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_changepassword.cpp moc_createvm.cpp moc_login.cpp moc_mainview.cpp moc_networkconfig.cpp moc_socketservice.cpp moc_wifi.cpp
moc_changepassword.cpp: changepassword.h
	/opt/qtsdk-2010.04/qt/bin/moc $(DEFINES) $(INCPATH) changepassword.h -o moc_changepassword.cpp

moc_createvm.cpp: createvm.h
	/opt/qtsdk-2010.04/qt/bin/moc $(DEFINES) $(INCPATH) createvm.h -o moc_createvm.cpp

moc_login.cpp: login.h
	/opt/qtsdk-2010.04/qt/bin/moc $(DEFINES) $(INCPATH) login.h -o moc_login.cpp

moc_mainview.cpp: login.h \
		networkconfig.h \
		wifi.h \
		changepassword.h \
		createvm.h \
		socketservice.h \
		http_curl.h \
		mainview.h
	/opt/qtsdk-2010.04/qt/bin/moc $(DEFINES) $(INCPATH) mainview.h -o moc_mainview.cpp

moc_networkconfig.cpp: networkconfig.h
	/opt/qtsdk-2010.04/qt/bin/moc $(DEFINES) $(INCPATH) networkconfig.h -o moc_networkconfig.cpp

moc_socketservice.cpp: http_curl.h \
		socketservice.h
	/opt/qtsdk-2010.04/qt/bin/moc $(DEFINES) $(INCPATH) socketservice.h -o moc_socketservice.cpp

moc_wifi.cpp: wifi.h
	/opt/qtsdk-2010.04/qt/bin/moc $(DEFINES) $(INCPATH) wifi.h -o moc_wifi.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

changepassword.o: changepassword.cpp changepassword.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o changepassword.o changepassword.cpp

cJSON.o: cJSON.c cJSON.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o cJSON.o cJSON.c

createvm.o: createvm.cpp createvm.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o createvm.o createvm.cpp

http_curl.o: http_curl.cpp http_curl.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o http_curl.o http_curl.cpp

logging.o: logging.c logging.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o logging.o logging.c

login.o: login.cpp login.h \
		ui_login.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o login.o login.cpp

main.o: main.cpp mainview.h \
		login.h \
		networkconfig.h \
		wifi.h \
		changepassword.h \
		createvm.h \
		socketservice.h \
		http_curl.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainview.o: mainview.cpp mainview.h \
		login.h \
		networkconfig.h \
		wifi.h \
		changepassword.h \
		createvm.h \
		socketservice.h \
		http_curl.h \
		ui_mainview.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainview.o mainview.cpp

networkconfig.o: networkconfig.cpp networkconfig.h \
		ui_networkconfig.h \
		wifi.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o networkconfig.o networkconfig.cpp

socketservice.o: socketservice.cpp socketservice.h \
		http_curl.h \
		cJSON.h \
		logging.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o socketservice.o socketservice.cpp

wifi.o: wifi.cpp wifi.h \
		ui_wifi.h \
		logging.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wifi.o wifi.cpp

moc_changepassword.o: moc_changepassword.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_changepassword.o moc_changepassword.cpp

moc_createvm.o: moc_createvm.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_createvm.o moc_createvm.cpp

moc_login.o: moc_login.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_login.o moc_login.cpp

moc_mainview.o: moc_mainview.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainview.o moc_mainview.cpp

moc_networkconfig.o: moc_networkconfig.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_networkconfig.o moc_networkconfig.cpp

moc_socketservice.o: moc_socketservice.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_socketservice.o moc_socketservice.cpp

moc_wifi.o: moc_wifi.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_wifi.o moc_wifi.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

